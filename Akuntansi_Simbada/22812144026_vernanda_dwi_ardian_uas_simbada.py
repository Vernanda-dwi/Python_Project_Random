# -*- coding: utf-8 -*-
"""22812144026_Vernanda Dwi Ardian_UAS_SIMBADA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12WemOqzEcs8ozLoReAgf3L8DXYSoWPXX

1. Membuat Databases
2. Membuat Tabel
"""

# Menambahkan liblary sql
import sqlite3
import pandas as pd

# Mengoneksikan database dan membuat file database

con = sqlite3.connect('Laporan.db')
cur = con.cursor()

# Membuat Tabel user (Create)
cur.execute('CREATE TABLE IF NOT EXISTS User (User TEXT NOT NULL, \
                              Pass TEXT NOT NULL, \
                              Status TEXT NOT NULL)')

#Membuat tabel informasi_UMKM
cur.execute('CREATE TABLE IF NOT EXISTS informasi_UMKM ( NIM TEXT NOT NULL, \
                  Nama TEXT, \
                  Prodi TEXT)')

#Membuat tabel akun
cur.execute('CREATE TABLE IF NOT EXISTS akun (id_akun INTEGER PRIMARY KEY,\
                  nama_akun TEXT,\
                  jenis_akun TEXT)')


# Membuat tabel transaksi
cur.execute('CREATE TABLE IF NOT EXISTS transaksi (id_transaksi INTEGER PRIMARY KEY,\
                tanggal TEXT, \
                id_akun INTEGER, \
                keterangan TEXT,\
                jumlah float, \
                FOREIGN KEY (id_akun) REFERENCES akun(id_akun))')

print("Tabel berhasil dibuat")

"""3.Memasukkan data ke tabel user"""

#memasukkan data ke tabel User
# Memasukan data kedalam Database
Data_user = [
    ('nanda1', 'abc', 'admin'),
    ('vda1', 'def', 'user'),
    ('vda2', 'ghi', 'user'),
    ('nanda2', 'jkl', 'admin'),
]

cur.executemany("INSERT INTO User VALUES (?, ?, ?)", Data_user)
con.commit()

print("Barang Baru berhasil dimasukan")

"""4.memasukkan data ke tabel Informasi UMKM"""

# Memasukan data kedalam Database


cur.execute("INSERT INTO informasi_UMKM ('NIM','Nama','Prodi') VALUES (?, ?, ?)", ('22812144026', 'Vernanda Dwi Ardian','Akuntansi'))
con.commit()

print("Data berhasil dimasukan")

"""5. Memasukkan data ke tabel akun"""

# data akun
Data_akun = [
    (111, 'Kas', 'Harta'),
    (112, 'Piutang', 'Harta'),
    (113, 'Persediaan barang', 'Harta'),
    (211, 'Utang', 'Kewajiban'),
    (311, 'Modal', 'Modal'),
    (312, 'Prive', 'Modal'),
    (411, 'Penjualan', 'Penjualan'),
    (412, 'Retur Penjualan', 'Penjualan'),
    (511, 'Beban', 'Beban'),
    (512, 'Beban Gaji', 'Beban'),
    (513, 'Beban Sewa', 'Beban')
]

cur.executemany("INSERT INTO akun VALUES (?, ?, ?)", Data_akun)
con.commit()

print("Data berhasil dimasukan")

"""6.Memasukkan data ke tabel transaksi"""

Data_transaksi = [
    (1, '2025-10-01', 111, 'Penerimaan kas dari pelanggan', 1500000),
    (2, '2025-10-02', 112, 'Penerimaan Piutang', 2000000),
    (3, '2025-10-03', 411, 'Penjualan secara tunai', 1800000),
    (4, '2025-10-04', 511, 'Pembayaran tagihan air', 300000),
    (5, '2025-10-05', 512, 'Gaji karyawan bulanan', 1200000),
    (6, '2025-10-06', 211, 'Pelunasan utang', 500000),
    (7, '2025-10-07', 113, 'Pembelian barang dagang', 2500000),
    (8, '2025-10-08', 311, 'Setoran modal dari pemilik', 1000000),
    (9, '2025-10-09', 412, 'Retur dari penjualan sebelumnya', -300000),
    (10, '2025-06-10', 513, 'Bayar sewa toko', 700000)
]


cur.executemany("INSERT INTO transaksi VALUES (?, ?, ?, ?, ?)", Data_transaksi)
con.commit()

df_user = pd.read_sql_query("SELECT * FROM transaksi", con)
df_user

"""7. Membuat fungsi CRUD pada tabel akun dan transaksi

"""

#Mmebuat Fungsi CREATE

#1 Untuk tabel akun
def Create_akun():
    Id = int(input("Masukan Id akun: "))
    NamaAkun = input("masukan nama akun: ")
    JenisAkun = input("masukan jenis akun: ")
    cur.execute('INSERT INTO akun (id_akun, nama_akun, jenis_akun) VALUES (?, ?, ?)', (Id, NamaAkun, JenisAkun))
    con.commit()
    print("data berhasil dimasukan")

#2 Tabel Transaksi
def create_transaksi():
    Id = int(input("Masukan Id Transaksi: "))
    Tanggal = input("masukan tanggal(YYYY-MM-DD): ")
    Id_akun = int(input("masukan id akun: "))
    Keterangan = input("masukan keterangan: ")
    Jumlah = input("masukan jumlah transaksi: ")
    cur.execute("INSERT INTO transaksi (id_transaksi, tanggal, id_akun, keterangan, jumlah) VALUES (?, ?, ?, ?, ?)",
                (Id, Tanggal, Id_akun, Keterangan, Jumlah))
    con.commit()
    print("Transaksi berhasil ditambahkan.")

#3 Tabel User
def create_user():
    User = (input("Masukan User: "))
    Password = input("masukan Pass: ")
    Status = input("masukan Status: ")
    cur.execute('INSERT INTO User (User, Pass, Status) VALUES (?, ?, ?)', (User, Password, Status))
    con.commit()
    print("User berhasil dimasukan")

#Membuat Fungsi Read
#1 Untuk tabel akun
def Read_akun():
  Tampil1 = pd.read_sql_query('SELECT * FROM akun', con)
  print(Tampil1)

#2 Untuk tabel transaksi
def Read_transaksi():
  Tampil2 = pd.read_sql_query('SELECT * FROM transaksi', con)
  print(Tampil2)

#2 Untuk tabel User
def Read_user():
  Tampil3 = pd.read_sql_query('SELECT * FROM User', con)
  print(Tampil3)

#3 Fungsi UPDATE
#1 Tabel Akun
def Update_akun():
  print("\n--- Anda Masuk Menu Update Tabel Akun ---")
  id_akun = int(input("masukan id akun yang akan diubah: "))
  nama_akun = input("masukan nama akun terbaru: ")
  jenis_akun = input("masukan jenis akun terbaru: ")
  cur.execute("UPDATE akun SET nama_akun = ?, jenis_akun = ? WHERE id_akun = ?", (nama_akun, jenis_akun,id_akun))
  con.commit()
  print("data akun berhasil diubah")


#2 Tabel Transaksi
def update_transaksi():
    print("\n--- Anda Masuk Menu Update Tabel Transaksi ---")
    id_transaksi = int(input("Masukan Id Transaksi yang akan diubah: "))
    tanggal_baru = input("masukan tanggal(YYYY-MM-DD) terbaru: ")
    id_akun_baru = int(input("masukan id akun terbaru: "))
    keterangan_baru = input("masukan keterangan terbaru: ")
    jumlah_baru = input("masukan jumlah transaksi terbaru: ")
    cur.execute(" UPDATE transaksi SET tanggal = ?, id_akun = ?, keterangan = ?, jumlah = ? WHERE id_transaksi = ?", (tanggal_baru, id_akun_baru, keterangan_baru, jumlah_baru, id_transaksi))
    con.commit()
    print("data transaksi berhasil diupdate.")


#3 Tabel user
def update_user():
    User = (input("Masukan User terbaru: "))
    Password = input("masukan Password: ")
    Status = input("masukan Status: ")
    cur.execute(" UPDATE User SET Pass = ?, Status = ? WHERE User = ?", (Password, Status,User))
    con.commit()
    print("User berhasil dimasukan")

# Delete
# akun
def delete_akun():
    Tampil = pd.read_sql_query('SELECT * FROM akun', con)
    print(Tampil)
    Id = int(input("Masukkan id akun yang dihapus: "))
    cur.execute('DELETE FROM akun WHERE id_akun = ?', (Id,))
    con.commit()
    print("Data akun berhasil dihapus.")

# transaksi
def delete_transaksi():
    Tampil = pd.read_sql_query('SELECT * FROM transaksi', con)
    print(Tampil)
    Id = int(input("Masukkan id transaksi yang dihapus: "))
    cur.execute('DELETE FROM transaksi WHERE id_transaksi = ?', (Id,))
    con.commit()
    print("Data transaksi berhasil dihapus.")

# user
def delete_user():
    Tampil = pd.read_sql_query('SELECT * FROM User', con)
    print(Tampil)
    data_usr = input("Masukan User yang akan dihapus: ")
    cur.execute('DELETE FROM User WHERE User = ?', (data_usr,))
    con.commit()
    print("Data User berhasil dihapus.")

# fungsi login
def login():
    username = input("Masukkan Username: ")
    password = input("Masukkan Password: ")

    cur.execute("SELECT Status FROM User WHERE User=? AND Pass=?", (username, password))
    result = cur.fetchone()

    if result:
        status = result[0]
        if status == "admin":
            print("Anda login sebagai Admin")
            admin_menu()
        elif status == "user":
            print("Anda login sebagai User")
            user_menu()
        else:
            print("Status tidak dikenal.")
    else:
      print("Username atau password salah. Kembali ke login.")
      login()  # Rekursif untuk coba lagi

def show_data_menu():
    while True:
        print("\n--- Show Data Menu ---")
        print("1. Show akun data")
        print("2. Show transaction data")
        print("3. Back to Admin Menu")
        pilihan = input("Pilih: ")

        if pilihan == "1":
          Read_akun()

        elif pilihan == "2":
          Read_transaksi()

        elif pilihan == "3":
          break

        else:
          print("Pilihan tidak valid")

def add_data_menu():
    while True:
        print("\n--- Show Data Menu ---")
        print("1. add akun data")
        print("2. add transaction data")
        print("3. Back to Admin Menu")
        pilihan = input("Pilih: ")

        if pilihan == "1":
           Create_akun()

        elif pilihan == "2":
           create_transaksi()

        elif pilihan == "3":
          break

        else:
          print("Pilihan tidak valid")

def change_data_menu():
    while True:
      print("\n--- Change Data Menu ---")
      print("1. Change akun data")
      print("2. Change transaction data")
      print("3. Back to Admin Menu")
      pilihan = input("Pilih: ")

      if pilihan == "1":
        Update_akun()
      elif pilihan == "2":
        update_transaksi()
      elif pilihan == "3":
        break
      else:
        print("Pilihan tidak valid")

def delete_data_menu():
    while True:
      print("\n--- Delete Data Menu ---")
      print("1. delete akun data")
      print("2. delete transaction data")
      print("3. Back to Admin Menu")
      pilihan = input("Pilih: ")

      if pilihan == "1":
        delete_akun()

      elif pilihan == "2":
        delete_transaksi()

      elif pilihan == "3":
        break

      else:
        print("Pilihan tidak valid")

def menu_usr():
    while True:
        print("\n--- User Menu ---")
        print("1. Tambah data User")
        print("2. Hapus data User")
        print("3. Update data User")
        print("4. Show data User")

        pilihan = input("Pilih: ")

        if pilihan == "1":
          create_user()

        elif pilihan == "2":
          delete_user()

        elif pilihan == "3":
          update_user()

        elif pilihan == "4":
          Read_user()

        else:
            print("Pilihan tidak valid")

# fungsi menu
def admin_menu():
    while True:
        print("\n--- Admin Menu ---")
        print("1 Show data")
        print("2. Add data ")
        print("3. Change data")
        print("4. Delete data")
        print("5. User Menu")
        pilihan = input("Pilih: ")

        if pilihan == "1":
            show_data_menu()
            pass
        elif pilihan == "2":
            add_data_menu()
            pass
        elif pilihan == "3":
            change_data_menu()
            pass
        elif pilihan == "4":
            delete_data_menu()
            pass
        elif pilihan == "5":
            menu_usr()
            pass
        else:
            print("Pilihan tidak valid")

def user_menu():
    while True:
        print("\n--- User Menu ---")
        print("1. Tambah data")
        print("2. Logout")
        pilihan = input("Pilih: ")

        if pilihan == "1":
          print("Menambahkan data transaksi")
          create_transaksi()

        elif pilihan == '2':
          login()
        else:
          print("Pilihan tidak valid")
          login()

df_akun = pd.read_sql_query("SELECT * FROM akun", con)
df_akun

df_transaksi = pd.read_sql_query("SELECT * FROM transaksi", con)
df_transaksi

#
login()